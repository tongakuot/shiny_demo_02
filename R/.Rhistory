skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
)
ds_skills_data_tbl$title %>% unique()
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title:}, {skill:}, count")
)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title:}, {skill:}, {count}")
)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title}, {skill}, {count}")
)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title}:, {skill}, {count}")
)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title}:{skill}: {count}",)
)
View(ds_skills_data_tbl)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title}({skill}): {count}",)
)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title} ({skill}): {count}",)
)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title} ({skill}):
{count}",)
)
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
str_detect(skill, 'pandas (software)')                    ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title} ({skill}): {count}")
)
View(ds_skills_data_tbl)
shiny::runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(
echo    = TRUE,
message = FALSE,
warning = FALSE)
# Libraries
library(tidyverse)
library(vroom)
library(bbplot)
# Save data as a CSV file
vroom::vroom_write(ds_skills_data_tbl,
'../00_data/ds_tbl.csv',
delim = ',')
# Save data as a CSV file
vroom::vroom_write(ds_skills_data_tbl,
'../00_data/ds_tbl.csv',
delim = ',')
# Load the dataset
ds_tbl <- vroom('00_data/ds_tbl.csv', show_col_types = FALSE)
runApp()
ds_skills_data_tbl$skill %>% unique() %>% sort()
# Subset the data
ds_skills_data_tbl <-
# Raw data
data_raw %>%
# Select desired columns and rearrange them
select(Title, skill, count) %>%
# Modify column names
set_names(names(.) %>% str_to_lower()) %>%
# Tidy skill column values
mutate(
skill = case_when(
str_detect(skill, 'sql')                                  ~ 'sql',
str_detect(skill, 'database')                             ~ 'databases',
str_detect(skill, 'etl')                                  ~ 'etl',
skill %in% c('phython', 'python (programming language)')  ~ 'python',
str_detect(skill, 'excel')                                ~ 'microsoft excel',
str_detect(skill, 'cisco')                                ~ 'cisco technologies',
skill == 'access'                                         ~ 'microsoft access',
skill == 'word'                                           ~ 'microsoft word',
skill %in% c('power point', 'powerpoint')                 ~ 'microsoft powerpoint',
skill %in% c('natural language processing (nlp)', 'nlp')  ~ 'natural language processing',
skill == 'requirements analysis'                          ~ 'requirement analysis',
skill == 'sas programming'                                ~ 'sas',
skill == 'jupyter'                                        ~ 'jupyter notebook',
skill == 'artificial intelligence (ai)'                   ~ 'artificial intelligence',
skill == 'cloud'                                          ~ 'cloud computing',
str_detect(skill, 'data structure')                       ~ 'data structures',
str_detect(skill, 'data warehousing')                     ~ 'datawarehouse',
skill == 'model'                                          ~ 'modeling',
str_detect(skill, 'visio')                                ~ 'microsoft visio',
skill == 'networking skills'                              ~ 'networking',
skill == 'pandas (software)'                              ~ 'pandas',
TRUE ~ skill)
) %>%
# Group by title, skill, and summarize
group_by(
title, skill
) %>%
summarize(
count   = sum(count),
.groups = "drop"
) %>%
# Add data label column
mutate(
label = str_glue("{title} ({skill}): {count}")
)
# Save data as a CSV file
vroom::vroom_write(ds_skills_data_tbl,
'../00_data/ds_tbl.csv',
delim = ',')
ds_skills_data_tbl$skill %>% unique() %>% sort()
reticulate::repl_python()
